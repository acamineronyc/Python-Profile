1.
First, we make the API call and print the status of the response
API call returns a list containing the IDs of the 500 most popular articles
2.
We then convert the response text to a Python list at, which we store in submission_ids
We’ll use these IDs to build a set of dictionaries that each store information about
one of the current submissions.
3.
We set up an empty list called submission_dicts at to store these dictionaries
We then loop through the IDs of the top 30 submissions.
4.
We make a new API call for each submission by generating a URL that includes the current
value of submission_id
We print the status of each request so we can see whether it is successful.
5.
We create a dictionary for the submission currently being processed, where we store the title
of the submission and a link to the discussion page for that item.
6.
We store the number of comments in the dictionary. If an article has no comments yet, the key
'descendants' will not be present.
When you’re not sure if a key exists in a dictionary, use the dict.get() method,
Which returns the value associated with the given key if it exists or the value you provide
if the key doesn’t exist (0 in this example).
Finally, we append each submission_dict to the list submission_dicts.
7.
We want to sort the list of dictionaries by the number of comments. To do this, we use a function
called itemgetter()
Which comes from the operator module. We pass this function the key 'comments', and it pulls the
value asso- ciated with that key from each dictionary in the list.
The sorted() function then uses this value as its basis for sorting the list. We sort the list
in reverse order to place the most-commented stories first.
Once the list is sorted, we loop through the list at and print out three pieces of information
about each of the top submissions: the title,
a link to the discussion page, and the number of comments the submission currently has:
Status code: 200
200
200
200
--snip--
Title: Firefox deactivates Flash by default
Discussion link: http://news.ycombinator.com/item?id=9883246
Comments: 231
Title: New Horizons: Nasa spacecraft speeds past Pluto
Discussion link: http://news.ycombinator.com/item?id=9884165
Comments: 142
—SNIP—

You would use a similar process to access and analyze information with any API
